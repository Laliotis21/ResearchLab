// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ResearchLab_Library;

#nullable disable

namespace ResearchLab_Library.Migrations
{
    [DbContext(typeof(LabDbContext))]
    [Migration("20220119190118_Change EveryThing")]
    partial class ChangeEveryThing
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ResearchLab_Library.Joins.MembersPublications", b =>
                {
                    b.Property<long>("MemberID")
                        .HasColumnType("bigint");

                    b.Property<long>("PublicationID")
                        .HasColumnType("bigint");

                    b.HasKey("MemberID", "PublicationID");

                    b.HasIndex("PublicationID");

                    b.ToTable("MembersPublications");
                });

            modelBuilder.Entity("ResearchLab_Library.Model.Member", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Cv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebPage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("ResearchLab_Library.Model.Publication", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("Published")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("Publications");
                });

            modelBuilder.Entity("ResearchLab_Library.Joins.MembersPublications", b =>
                {
                    b.HasOne("ResearchLab_Library.Model.Member", "Member")
                        .WithMany("MembersPublications")
                        .HasForeignKey("MemberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ResearchLab_Library.Model.Publication", "Publication")
                        .WithMany("MembersPublications")
                        .HasForeignKey("PublicationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("Publication");
                });

            modelBuilder.Entity("ResearchLab_Library.Model.Member", b =>
                {
                    b.Navigation("MembersPublications");
                });

            modelBuilder.Entity("ResearchLab_Library.Model.Publication", b =>
                {
                    b.Navigation("MembersPublications");
                });
#pragma warning restore 612, 618
        }
    }
}
